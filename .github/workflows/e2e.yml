name: E2E

on:
  push:
    branches:
      - main
  pull_request:

env:
  AUTH_SOLANA_LOGIN_ENABLED: true
  AUTH_SOLANA_REGISTER_ENABLED: true
  API_URL: http://localhost:3000/api
  CLOAK_KEYCHAIN: 'v1.aesgcm256.c3d07a38.BoM0uySfyLZLqg8B.in_ID0d7vrwBdUjjGwvBe0CG'
  CLOAK_MASTER_KEY: 'k1.aesgcm256.vG3cv8JCPJPHaEKmcDJMA2PeXDjoVlXCC9KLu96R_Rg='
  DATABASE_URL: postgresql://pubkey-link:pubkey-link@localhost:5432/pubkey-link?schema=public
  DATABASE_PROVISION: true
  FEATURE_ANON_COMMUNITIES: true
  FEATURE_COMMUNITY_CREATE: true
  FEATURE_COMMUNITY_SNAPSHOTS: true
  FEATURE_IDENTITY_CLI_VERIFICATION: true
  HOST: 127.0.0.1
  REDIS_URL: redis://localhost:6379
  JWT_SECRET: 1dfe5003518560c6362eab48f8220edf8708bbc67efbd4ed8cdf621965e938ee
  PORT: 3000
  SESSION_SECRET: 1dfe5003518560c6362eab48f8220edf8708bbc67efbd4ed8cdf621965e938ee
  # TODO: Fix the setup so works on a local validator
  SOLANA_MAINNET_ENDPOINT: 'https://api.mainnet-beta.solana.com'

jobs:
  main-e2e:
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: pubkey-link
          POSTGRES_PASSWORD: pubkey-link
          POSTGRES_DB: pubkey-link
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports: ['6379:6379']
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: pnpm/action-setup@v2
        with:
          version: 9.3.0
      - uses: actions/checkout@v3
        name: Checkout [main]
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: pnpm install --frozen-lockfile --prefer-frozen-lockfile
      - run: pnpm prisma generate
      - run: pnpm prisma db push --skip-generate
      - run: pnpm nx run-many --target=build --all --parallel --skip-nx-cache --verbose
      - run: pnpm nx e2e api-e2e --skip-nx-cache --verbose

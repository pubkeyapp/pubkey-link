fragment IdentitySummary on Identity {
  avatarUrl
  id
  name
  provider
  providerId
  verified
}

fragment IdentityDetails on Identity {
  avatarUrl
  createdAt
  syncStarted
  syncEnded
  expired
  id
  name
  ownerId
  profile
  provider
  providerId
  updatedAt
  url
  verified
}

fragment IdentityChallengeDetails on IdentityChallenge {
  id
  createdAt
  updatedAt
  provider
  providerId
  challenge
  signature
  blockhash
  userAgent
  verified
}

fragment IdentityGrantDetails on IdentityGrant {
  createdAt
  id
  granteeId
  grantee {
    ...UserDetails
  }
  provider
  providerId
  updatedAt
}

query adminFindManyIdentity($input: AdminFindManyIdentityInput!) {
  items: adminFindManyIdentity(input: $input) {
    ...IdentityDetails
    challenges {
      ...IdentityChallengeDetails
    }
    grants {
      ...IdentityGrantDetails
    }
    owner {
      ...UserDetails
    }
  }
}

query adminFindUserByIdentity($provider: IdentityProvider!, $providerId: String!) {
  item: adminFindUserByIdentity(provider: $provider, providerId: $providerId) {
    ...UserSummary
    identities {
      ...IdentitySummary
    }
  }
}

mutation adminCreateIdentity($input: AdminCreateIdentityInput!) {
  created: adminCreateIdentity(input: $input) {
    ...IdentityDetails
  }
}

mutation adminDeleteIdentity($identityId: String!) {
  deleted: adminDeleteIdentity(identityId: $identityId)
}

mutation adminSyncIdentity($identityId: String!) {
  deleted: adminSyncIdentity(identityId: $identityId)
}

query userFindManyIdentity($input: UserFindManyIdentityInput!) {
  items: userFindManyIdentity(input: $input) {
    ...IdentityDetails
    grants {
      ...IdentityGrantDetails
    }
  }
}
query userFindOneIdentity($provider: IdentityProvider!, $providerId: String!) {
  item: userFindOneIdentity(provider: $provider, providerId: $providerId) {
    ...IdentityDetails
    grants {
      ...IdentityGrantDetails
    }
    owner {
      ...UserDetails
    }
  }
}

mutation userDeleteIdentity($identityId: String!) {
  deleted: userDeleteIdentity(identityId: $identityId)
}

mutation userUpdateIdentity($identityId: String!, $input: UserUpdateIdentityInput!) {
  update: userUpdateIdentity(identityId: $identityId, input: $input) {
    ...IdentityDetails
  }
}

mutation userRefreshIdentity($identityId: String!) {
  deleted: userRefreshIdentity(identityId: $identityId)
}

query userRequestIdentityChallenge($input: RequestIdentityChallengeInput!) {
  challenge: userRequestIdentityChallenge(input: $input) {
    ...IdentityChallengeDetails
  }
}

query userRequestIdentityChallengeCli($input: RequestIdentityChallengeInput!) {
  challenge: userRequestIdentityChallengeCli(input: $input) {
    ...IdentityChallengeDetails
  }
}

mutation userVerifyIdentityChallenge($input: VerifyIdentityChallengeInput!) {
  verified: userVerifyIdentityChallenge(input: $input) {
    ...IdentityChallengeDetails
  }
}

mutation userVerifyIdentityChallengeCli($input: VerifyIdentityChallengeInput!) {
  verified: userVerifyIdentityChallengeCli(input: $input) {
    ...IdentityChallengeDetails
  }
}

mutation userLinkIdentity($input: LinkIdentityInput!) {
  linked: userLinkIdentity(input: $input) {
    ...IdentityDetails
  }
}

query anonRequestIdentityChallenge($input: RequestIdentityChallengeInput!) {
  challenge: anonRequestIdentityChallenge(input: $input) {
    ...IdentityChallengeDetails
  }
}

mutation anonVerifyIdentityChallenge($input: VerifyIdentityChallengeInput!) {
  verified: anonVerifyIdentityChallenge(input: $input) {
    ...IdentityChallengeDetails
  }
}

mutation userAddIdentityGrant($input: UserAddIdentityGrantInput!) {
  added: userAddIdentityGrant(input: $input)
}

mutation userRemoveIdentityGrant($input: UserRemoveIdentityGrantInput!) {
  removed: userRemoveIdentityGrant(input: $input)
}

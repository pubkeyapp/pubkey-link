fragment TeamDetails on Team {
  createdAt
  id
  name
  communityId
  avatarUrl
  members {
    ...CommunityMemberDetails
  }
  identityId
  identity {
    ...IdentityDetails
    owner {
      ...UserDetails
    }
  }
  updatedAt
}

query adminFindManyTeam($input: AdminFindManyTeamInput!) {
  paging: adminFindManyTeam(input: $input) {
    data {
      ...TeamDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query adminFindOneTeam($teamId: String!) {
  item: adminFindOneTeam(teamId: $teamId) {
    ...TeamDetails
  }
}

mutation adminUpdateTeam($teamId: String!, $input: AdminUpdateTeamInput!) {
  updated: adminUpdateTeam(teamId: $teamId, input: $input) {
    ...TeamDetails
  }
}

mutation adminDeleteTeam($teamId: String!) {
  deleted: adminDeleteTeam(teamId: $teamId)
}

query userFindManyTeam($input: UserFindManyTeamInput!) {
  paging: userFindManyTeam(input: $input) {
    data {
      ...TeamDetails
    }
    meta {
      ...PagingMetaDetails
    }
  }
}

query userFindOneTeam($teamId: String!) {
  item: userFindOneTeam(teamId: $teamId) {
    ...TeamDetails
  }
}

mutation userCreateTeam($input: UserCreateTeamInput!) {
  created: userCreateTeam(input: $input) {
    ...TeamDetails
  }
}

mutation userUpdateTeam($teamId: String!, $input: UserUpdateTeamInput!) {
  updated: userUpdateTeam(teamId: $teamId, input: $input) {
    ...TeamDetails
  }
}

mutation userDeleteTeam($teamId: String!) {
  deleted: userDeleteTeam(teamId: $teamId)
}

mutation userAddTeamMember($teamId: String!, $userId: String!) {
  added: userAddTeamMember(teamId: $teamId, userId: $userId)
}

mutation userRemoveTeamMember($teamId: String!, $userId: String!) {
  removed: userRemoveTeamMember(teamId: $teamId, userId: $userId)
}

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`api-crud generator should create crud with parent ID 1`] = `
{
  "company": {
    "children": {
      "data-access": {
        "children": {
          ".eslintrc.json": {
            "content": [
              "{",
              ""extends": ["../../../../.eslintrc.json"],",
              ""ignorePatterns": ["!**/*"],",
              ""overrides": [",
              "{",
              ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.ts", "*.tsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.js", "*.jsx"],",
              ""rules": {}",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/.eslintrc.json",
          },
          "README.md": {
            "content": [
              "# test-company-data-access",
              "This library was generated with [Nx](https://nx.dev).",
              "## Running unit tests",
              "Run \`nx test test-company-data-access\` to execute the unit tests via [Jest](https://jestjs.io).",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/README.md",
          },
          "jest.config.ts": {
            "content": [
              "/* eslint-disable */",
              "export default {",
              "displayName: 'test-company-data-access',",
              "preset: '../../../../jest.preset.js',",
              "testEnvironment: 'node',",
              "transform: {",
              "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
              "},",
              "moduleFileExtensions: ['ts', 'js', 'html'],",
              "coverageDirectory: '../../../../coverage/libs/test/company/data-access',",
              "};",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/jest.config.ts",
          },
          "project.json": {
            "content": [
              "{",
              ""name": "test-company-data-access",",
              ""$schema": "../../../../node_modules/nx/schemas/project-schema.json",",
              ""sourceRoot": "libs/test/company/data-access/src",",
              ""projectType": "library",",
              ""targets": {",
              ""lint": {",
              ""executor": "@nx/eslint:lint",",
              ""outputs": ["{options.outputFile}"]",
              "},",
              ""test": {",
              ""executor": "@nx/jest:jest",",
              ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
              ""options": {",
              ""jestConfig": "libs/test/company/data-access/jest.config.ts"",
              "}",
              "}",
              "},",
              ""tags": ["app:test", "type:data-access"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/project.json",
          },
          "src": {
            "children": {
              "index.ts": {
                "content": [
                  "export * from './lib/test-company.data-access.module';",
                  "export * from './lib/test-company.service';",
                  "export * from './lib/entity/company.entity';",
                  "export * from './lib/dto/admin-create-company.input';",
                  "export * from './lib/dto/admin-find-many-company.input';",
                  "export * from './lib/dto/admin-update-company.input';",
                ],
                "isBinary": false,
                "path": "libs/test/company/data-access/src/index.ts",
              },
              "lib": {
                "children": {
                  "dto": {
                    "children": {
                      "admin-create-company.input.ts": {
                        "content": [
                          "import { Field, InputType } from '@nestjs/graphql';",
                          "@InputType()",
                          "export class AdminCreateCompanyInput {",
                          "@Field()",
                          "name!: string;",
                          "@Field()",
                          "location!: string;",
                          "@Field({ nullable: true })",
                          "phone?: string;",
                          "}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/dto/admin-create-company.input.ts",
                      },
                      "admin-find-many-company.input.ts": {
                        "content": [
                          "import { Field, InputType } from '@nestjs/graphql'",
                          "import { PagingInput } from '@proj/test-core-data-access'",
                          "@InputType()",
                          "export class AdminFindManyCompanyInput extends PagingInput() {",
                          "@Field(",
                          "ownerId!: string",
                          "@Field({ nullable: true })",
                          "search?: string",
                          "}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/dto/admin-find-many-company.input.ts",
                      },
                      "admin-update-company.input.ts": {
                        "content": [
                          "import { Field, InputType } from '@nestjs/graphql';",
                          "@InputType()",
                          "export class AdminUpdateCompanyInput {",
                          "@Field({ nullable: true })",
                          "name?: string;",
                          "@Field({ nullable: true })",
                          "location?: string;",
                          "@Field({ nullable: true })",
                          "phone?: string;",
                          "}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/dto/admin-update-company.input.ts",
                      },
                    },
                    "path": "libs/test/company/data-access/src/lib/dto",
                  },
                  "entity": {
                    "children": {
                      "company.entity.ts": {
                        "content": [
                          "import { Field, ObjectType } from '@nestjs/graphql'",
                          "import { PagingResponse } from '@proj/test-core-data-access'",
                          "import { User } from '@proj/test-user-data-access'",
                          "@ObjectType()",
                          "export class Company {",
                          "@Field()",
                          "id!: string",
                          "@Field({ nullable: true })",
                          "createdAt?: Date",
                          "@Field({ nullable: true })",
                          "updatedAt?: Date",
                          "@Field()",
                          "name!: string",
                          "@Field()",
                          "location!: string",
                          "@Field({ nullable: true })",
                          "phone?: string",
                          "@Field(",
                          "ownerId!: string",
                          "@Field(() => User, { nullable: true })",
                          "owner?: User",
                          "}",
                          "@ObjectType()",
                          "export class CompanyPaging extends PagingResponse<Company>(Company) {}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/entity/company.entity.ts",
                      },
                    },
                    "path": "libs/test/company/data-access/src/lib/entity",
                  },
                  "helpers": {
                    "children": {
                      "get-company-where-admin.input.ts": {
                        "content": [
                          "import { Prisma } from '@prisma/client';",
                          "import { AdminFindManyCompanyInput } from '../dto/admin-find-many-company.input';",
                          "export function getCompanyWhereAdminInput(",
                          "input: AdminFindManyCompanyInput",
                          "): Prisma.CompanyWhereInput {",
                          "const where: Prisma.CompanyWhereInput = { ownerId: input.ownerId };",
                          "if (input.search) {",
                          "where.OR = [",
                          "{ id: { contains: input.search, mode: 'insensitive' } },",
                          "{ name: { contains: input.search, mode: 'insensitive' } },",
                          "];",
                          "}",
                          "return where;",
                          "}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/helpers/get-company-where-admin.input.ts",
                      },
                    },
                    "path": "libs/test/company/data-access/src/lib/helpers",
                  },
                  "test-company-data-admin.service.ts": {
                    "content": [
                      "import { Injectable } from '@nestjs/common';",
                      "import { AdminCreateCompanyInput } from './dto/admin-create-company.input';",
                      "import { AdminFindManyCompanyInput } from './dto/admin-find-many-company.input';",
                      "import { AdminUpdateCompanyInput } from './dto/admin-update-company.input';",
                      "import { CompanyPaging } from './entity/company.entity';",
                      "import { getCompanyWhereAdminInput } from './helpers/get-company-where-admin.input';",
                      "import { TestCompanyDataService } from './test-company-data.service';",
                      "@Injectable()",
                      "export class TestCompanyDataAdminService {",
                      "constructor(private readonly data: TestCompanyDataService) {}",
                      "async createCompany(ownerId: string, input: AdminCreateCompanyInput) {",
                      "return this.data.create(input);",
                      "}",
                      "async deleteCompany(ownerId: string, companyId: string) {",
                      "return this.data.delete(companyId);",
                      "}",
                      "async findManyCompany(",
                      "input: AdminFindManyCompanyInput",
                      "): Promise<CompanyPaging> {",
                      "return this.data.findMany({",
                      "orderBy: { createdAt: 'desc' },",
                      "where: getCompanyWhereAdminInput(input),",
                      "limit: input.limit,",
                      "page: input.page,",
                      "});",
                      "}",
                      "async findOneCompany(ownerId: string, companyId: string) {",
                      "return this.data.findOne(companyId);",
                      "}",
                      "async updateCompany(",
                      "ownerId: string,",
                      "companyId: string,",
                      "input: AdminUpdateCompanyInput",
                      ") {",
                      "return this.data.update(companyId, input);",
                      "}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/data-access/src/lib/test-company-data-admin.service.ts",
                  },
                  "test-company-data.service.ts": {
                    "content": [
                      "import { Injectable } from '@nestjs/common';",
                      "import { Prisma } from '@prisma/client';",
                      "import {",
                      "TestCoreService,",
                      "type PagingInputFields,",
                      "} from '@proj/test-core-data-access';",
                      "import { CompanyPaging } from './entity/company.entity';",
                      "@Injectable()",
                      "export class TestCompanyDataService {",
                      "constructor(private readonly core: TestCoreService) {}",
                      "async create(input: Prisma.CompanyUncheckedCreateInput) {",
                      "return this.core.data.company.create({ data: input });",
                      "}",
                      "async delete(companyId: string) {",
                      "const deleted = await this.core.data.company.delete({",
                      "where: { id: companyId },",
                      "});",
                      "return !!deleted;",
                      "}",
                      "async findMany({",
                      "limit = 10,",
                      "page = 1,",
                      "...input",
                      "}: Prisma.CompanyFindManyArgs & PagingInputFields): Promise<CompanyPaging> {",
                      "return this.core.data.company",
                      ".paginate(input)",
                      ".withPages({ limit, page })",
                      ".then(([data, meta]) => ({ data, meta }));",
                      "}",
                      "async findOne(companyId: string) {",
                      "return this.core.data.company.findUnique({ where: { id: companyId } });",
                      "}",
                      "async update(companyId: string, input: Prisma.CompanyUpdateInput) {",
                      "return this.core.data.company.update({",
                      "where: { id: companyId },",
                      "data: input,",
                      "});",
                      "}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/data-access/src/lib/test-company-data.service.ts",
                  },
                  "test-company.data-access.module.ts": {
                    "content": [
                      "import { Module } from '@nestjs/common';",
                      "import { TestCoreDataAccessModule } from '@proj/test-core-data-access';",
                      "import { TestCompanyService } from './test-company.service';",
                      "import { TestCompanyDataService } from './test-company-data.service';",
                      "import { TestCompanyDataAdminService } from './test-company-data-admin.service';",
                      "@Module({",
                      "imports: [TestCoreDataAccessModule],",
                      "providers: [",
                      "TestCompanyService,",
                      "TestCompanyDataService,",
                      "TestCompanyDataAdminService,",
                      "],",
                      "exports: [TestCompanyService],",
                      "})",
                      "export class TestCompanyDataAccessModule {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/data-access/src/lib/test-company.data-access.module.ts",
                  },
                  "test-company.service.ts": {
                    "content": [
                      "import { Injectable } from '@nestjs/common';",
                      "import { TestCompanyDataService } from './test-company-data.service';",
                      "import { TestCompanyDataAdminService } from './test-company-data-admin.service';",
                      "@Injectable()",
                      "export class TestCompanyService {",
                      "constructor(",
                      "readonly data: TestCompanyDataService,",
                      "readonly admin: TestCompanyDataAdminService",
                      ") {}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/data-access/src/lib/test-company.service.ts",
                  },
                },
                "path": "libs/test/company/data-access/src/lib",
              },
            },
            "path": "libs/test/company/data-access/src",
          },
          "tsconfig.json": {
            "content": [
              "{",
              ""extends": "../../../../tsconfig.base.json",",
              ""compilerOptions": {",
              ""module": "commonjs",",
              ""forceConsistentCasingInFileNames": true,",
              ""strict": true,",
              ""noImplicitOverride": true,",
              ""noPropertyAccessFromIndexSignature": true,",
              ""noImplicitReturns": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""files": [],",
              ""include": [],",
              ""references": [",
              "{",
              ""path": "./tsconfig.lib.json"",
              "},",
              "{",
              ""path": "./tsconfig.spec.json"",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/tsconfig.json",
          },
          "tsconfig.lib.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""declaration": true,",
              ""types": ["node"],",
              ""target": "es6",",
              ""strictNullChecks": true,",
              ""noImplicitAny": true,",
              ""strictBindCallApply": true,",
              ""forceConsistentCasingInFileNames": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""include": ["src/**/*.ts"],",
              ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/tsconfig.lib.json",
          },
          "tsconfig.spec.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""module": "commonjs",",
              ""types": ["jest", "node"]",
              "},",
              ""include": [",
              ""jest.config.ts",",
              ""src/**/*.test.ts",",
              ""src/**/*.spec.ts",",
              ""src/**/*.d.ts"",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/tsconfig.spec.json",
          },
        },
        "path": "libs/test/company/data-access",
      },
      "feature": {
        "children": {
          ".eslintrc.json": {
            "content": [
              "{",
              ""extends": ["../../../../.eslintrc.json"],",
              ""ignorePatterns": ["!**/*"],",
              ""overrides": [",
              "{",
              ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.ts", "*.tsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.js", "*.jsx"],",
              ""rules": {}",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/.eslintrc.json",
          },
          "README.md": {
            "content": [
              "# test-company-feature",
              "This library was generated with [Nx](https://nx.dev).",
              "## Running unit tests",
              "Run \`nx test test-company-feature\` to execute the unit tests via [Jest](https://jestjs.io).",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/README.md",
          },
          "jest.config.ts": {
            "content": [
              "/* eslint-disable */",
              "export default {",
              "displayName: 'test-company-feature',",
              "preset: '../../../../jest.preset.js',",
              "testEnvironment: 'node',",
              "transform: {",
              "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
              "},",
              "moduleFileExtensions: ['ts', 'js', 'html'],",
              "coverageDirectory: '../../../../coverage/libs/test/company/feature',",
              "};",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/jest.config.ts",
          },
          "project.json": {
            "content": [
              "{",
              ""name": "test-company-feature",",
              ""$schema": "../../../../node_modules/nx/schemas/project-schema.json",",
              ""sourceRoot": "libs/test/company/feature/src",",
              ""projectType": "library",",
              ""targets": {",
              ""lint": {",
              ""executor": "@nx/eslint:lint",",
              ""outputs": ["{options.outputFile}"]",
              "},",
              ""test": {",
              ""executor": "@nx/jest:jest",",
              ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
              ""options": {",
              ""jestConfig": "libs/test/company/feature/jest.config.ts"",
              "}",
              "}",
              "},",
              ""tags": ["app:test", "type:feature"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/project.json",
          },
          "src": {
            "children": {
              "index.ts": {
                "content": [
                  "export * from './lib/test-company.feature.module';",
                ],
                "isBinary": false,
                "path": "libs/test/company/feature/src/index.ts",
              },
              "lib": {
                "children": {
                  "test-company-admin.resolver.ts": {
                    "content": [
                      "import { Resolver } from '@nestjs/graphql';",
                      "import { TestCompanyService } from '@proj/test-company-data-access';",
                      "import {",
                      "TestAuthGraphQLAdminGuard,",
                      "CtxUserId,",
                      "} from '@proj/test-auth-data-access';",
                      "import { Mutation, Query, Args } from '@nestjs/graphql';",
                      "import { UseGuards } from '@nestjs/common';",
                      "import {",
                      "AdminCreateCompanyInput,",
                      "AdminFindManyCompanyInput,",
                      "Company,",
                      "CompanyPaging,",
                      "AdminUpdateCompanyInput,",
                      "} from '@proj/test-company-data-access';",
                      "@Resolver()",
                      "@UseGuards(TestAuthGraphQLAdminGuard)",
                      "export class TestCompanyAdminResolver {",
                      "constructor(private readonly service: TestCompanyService) {}",
                      "@Mutation(() => Company, { nullable: true })",
                      "adminCreateCompany(",
                      "@CtxUserId() ownerId: string,",
                      "@Args('input') input: AdminCreateCompanyInput",
                      ") {",
                      "return this.service.admin.createCompany(ownerId, input);",
                      "}",
                      "@Mutation(() => Boolean, { nullable: true })",
                      "adminDeleteCompany(",
                      "@CtxUserId() ownerId: string,",
                      "@Args('companyId') companyId: string",
                      ") {",
                      "return this.service.admin.deleteCompany(ownerId, companyId);",
                      "}",
                      "@Query(() => CompanyPaging)",
                      "adminFindManyCompany(@Args('input') input: AdminFindManyCompanyInput) {",
                      "return this.service.admin.findManyCompany(input);",
                      "}",
                      "@Query(() => Company, { nullable: true })",
                      "adminFindOneCompany(",
                      "@CtxUserId() ownerId: string,",
                      "@Args('companyId') companyId: string",
                      ") {",
                      "return this.service.admin.findOneCompany(ownerId, companyId);",
                      "}",
                      "@Mutation(() => Company, { nullable: true })",
                      "adminUpdateCompany(",
                      "@CtxUserId() ownerId: string,",
                      "@Args('companyId') companyId: string,",
                      "@Args('input') input: AdminUpdateCompanyInput",
                      ") {",
                      "return this.service.admin.updateCompany(ownerId, companyId, input);",
                      "}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/feature/src/lib/test-company-admin.resolver.ts",
                  },
                  "test-company.feature.module.ts": {
                    "content": [
                      "import { Module } from '@nestjs/common';",
                      "import { TestCompanyDataAccessModule } from '@proj/test-company-data-access';",
                      "import { TestCompanyResolver } from './test-company.resolver';",
                      "import { TestCompanyAdminResolver } from './test-company-admin.resolver';",
                      "@Module({",
                      "imports: [TestCompanyDataAccessModule],",
                      "providers: [TestCompanyResolver, TestCompanyAdminResolver],",
                      "})",
                      "export class TestCompanyFeatureModule {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/feature/src/lib/test-company.feature.module.ts",
                  },
                  "test-company.resolver.ts": {
                    "content": [
                      "import { Resolver } from '@nestjs/graphql';",
                      "import { TestCompanyService } from '@proj/test-company-data-access';",
                      "import { Company } from '@proj/test-company-data-access';",
                      "@Resolver(() => Company)",
                      "export class TestCompanyResolver {",
                      "constructor(private readonly service: TestCompanyService) {}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/feature/src/lib/test-company.resolver.ts",
                  },
                },
                "path": "libs/test/company/feature/src/lib",
              },
            },
            "path": "libs/test/company/feature/src",
          },
          "tsconfig.json": {
            "content": [
              "{",
              ""extends": "../../../../tsconfig.base.json",",
              ""compilerOptions": {",
              ""module": "commonjs",",
              ""forceConsistentCasingInFileNames": true,",
              ""strict": true,",
              ""noImplicitOverride": true,",
              ""noPropertyAccessFromIndexSignature": true,",
              ""noImplicitReturns": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""files": [],",
              ""include": [],",
              ""references": [",
              "{",
              ""path": "./tsconfig.lib.json"",
              "},",
              "{",
              ""path": "./tsconfig.spec.json"",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/tsconfig.json",
          },
          "tsconfig.lib.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""declaration": true,",
              ""types": ["node"],",
              ""target": "es6",",
              ""strictNullChecks": true,",
              ""noImplicitAny": true,",
              ""strictBindCallApply": true,",
              ""forceConsistentCasingInFileNames": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""include": ["src/**/*.ts"],",
              ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/tsconfig.lib.json",
          },
          "tsconfig.spec.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""module": "commonjs",",
              ""types": ["jest", "node"]",
              "},",
              ""include": [",
              ""jest.config.ts",",
              ""src/**/*.test.ts",",
              ""src/**/*.spec.ts",",
              ""src/**/*.d.ts"",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/tsconfig.spec.json",
          },
        },
        "path": "libs/test/company/feature",
      },
    },
    "path": "libs/test/company",
  },
  "core": {
    "children": {
      "data-access": {
        "children": {
          ".eslintrc.json": {
            "content": [
              "{",
              ""extends": ["../../../../.eslintrc.json"],",
              ""ignorePatterns": ["!**/*"],",
              ""overrides": [",
              "{",
              ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.ts", "*.tsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.js", "*.jsx"],",
              ""rules": {}",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/.eslintrc.json",
          },
          "README.md": {
            "content": [
              "# test-core-data-access",
              "This library was generated with [Nx](https://nx.dev).",
              "## Running unit tests",
              "Run \`nx test test-core-data-access\` to execute the unit tests via [Jest](https://jestjs.io).",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/README.md",
          },
          "jest.config.ts": {
            "content": [
              "/* eslint-disable */",
              "export default {",
              "displayName: 'test-core-data-access',",
              "preset: '../../../../jest.preset.js',",
              "testEnvironment: 'node',",
              "transform: {",
              "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
              "},",
              "moduleFileExtensions: ['ts', 'js', 'html'],",
              "coverageDirectory: '../../../../coverage/libs/test/core/data-access',",
              "};",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/jest.config.ts",
          },
          "project.json": {
            "content": [
              "{",
              ""name": "test-core-data-access",",
              ""$schema": "../../../../node_modules/nx/schemas/project-schema.json",",
              ""sourceRoot": "libs/test/core/data-access/src",",
              ""projectType": "library",",
              ""targets": {",
              ""lint": {",
              ""executor": "@nx/eslint:lint",",
              ""outputs": ["{options.outputFile}"]",
              "},",
              ""test": {",
              ""executor": "@nx/jest:jest",",
              ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
              ""options": {",
              ""jestConfig": "libs/test/core/data-access/jest.config.ts"",
              "}",
              "}",
              "},",
              ""tags": []",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/project.json",
          },
          "src": {
            "children": {
              "index.ts": {
                "content": [
                  "export * from './lib/test-core-data-access.module';",
                ],
                "isBinary": false,
                "path": "libs/test/core/data-access/src/index.ts",
              },
              "lib": {
                "children": {
                  "test-core-data-access.module.ts": {
                    "content": [
                      "import { Module } from '@nestjs/common';",
                      "import { TestCoreService } from './test-core.service';",
                      "@Module({",
                      "controllers: [],",
                      "providers: [TestCoreService],",
                      "exports: [],",
                      "})",
                      "export class TestCoreDataAccessModule {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/core/data-access/src/lib/test-core-data-access.module.ts",
                  },
                  "test-core.service.spec.ts": {
                    "content": [
                      "import { Test, TestingModule } from '@nestjs/testing';",
                      "import { TestCoreService } from './test-core.service';",
                      "describe('TestCoreService', () => {",
                      "let service: TestCoreService;",
                      "beforeEach(async () => {",
                      "const module: TestingModule = await Test.createTestingModule({",
                      "providers: [TestCoreService],",
                      "}).compile();",
                      "service = module.get<TestCoreService>(TestCoreService);",
                      "});",
                      "it('should be defined', () => {",
                      "expect(service).toBeDefined();",
                      "});",
                      "});",
                    ],
                    "isBinary": false,
                    "path": "libs/test/core/data-access/src/lib/test-core.service.spec.ts",
                  },
                  "test-core.service.ts": {
                    "content": [
                      "import { Injectable } from '@nestjs/common';",
                      "@Injectable()",
                      "export class TestCoreService {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/core/data-access/src/lib/test-core.service.ts",
                  },
                },
                "path": "libs/test/core/data-access/src/lib",
              },
            },
            "path": "libs/test/core/data-access/src",
          },
          "tsconfig.json": {
            "content": [
              "{",
              ""extends": "../../../../tsconfig.base.json",",
              ""compilerOptions": {",
              ""module": "commonjs",",
              ""forceConsistentCasingInFileNames": true,",
              ""strict": true,",
              ""noImplicitOverride": true,",
              ""noPropertyAccessFromIndexSignature": true,",
              ""noImplicitReturns": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""files": [],",
              ""include": [],",
              ""references": [",
              "{",
              ""path": "./tsconfig.lib.json"",
              "},",
              "{",
              ""path": "./tsconfig.spec.json"",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/tsconfig.json",
          },
          "tsconfig.lib.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""declaration": true,",
              ""types": ["node"],",
              ""target": "es6",",
              ""strictNullChecks": true,",
              ""noImplicitAny": true,",
              ""strictBindCallApply": true,",
              ""forceConsistentCasingInFileNames": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""include": ["src/**/*.ts"],",
              ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/tsconfig.lib.json",
          },
          "tsconfig.spec.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""module": "commonjs",",
              ""types": ["jest", "node"]",
              "},",
              ""include": [",
              ""jest.config.ts",",
              ""src/**/*.test.ts",",
              ""src/**/*.spec.ts",",
              ""src/**/*.d.ts"",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/tsconfig.spec.json",
          },
        },
        "path": "libs/test/core/data-access",
      },
      "feature": {
        "children": {
          ".eslintrc.json": {
            "content": [
              "{",
              ""extends": ["../../../../.eslintrc.json"],",
              ""ignorePatterns": ["!**/*"],",
              ""overrides": [",
              "{",
              ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.ts", "*.tsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.js", "*.jsx"],",
              ""rules": {}",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/.eslintrc.json",
          },
          "README.md": {
            "content": [
              "# test-core-feature",
              "This library was generated with [Nx](https://nx.dev).",
              "## Running unit tests",
              "Run \`nx test test-core-feature\` to execute the unit tests via [Jest](https://jestjs.io).",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/README.md",
          },
          "jest.config.ts": {
            "content": [
              "/* eslint-disable */",
              "export default {",
              "displayName: 'test-core-feature',",
              "preset: '../../../../jest.preset.js',",
              "testEnvironment: 'node',",
              "transform: {",
              "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
              "},",
              "moduleFileExtensions: ['ts', 'js', 'html'],",
              "coverageDirectory: '../../../../coverage/libs/test/core/feature',",
              "};",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/jest.config.ts",
          },
          "project.json": {
            "content": [
              "{",
              ""name": "test-core-feature",",
              ""$schema": "../../../../node_modules/nx/schemas/project-schema.json",",
              ""sourceRoot": "libs/test/core/feature/src",",
              ""projectType": "library",",
              ""targets": {",
              ""lint": {",
              ""executor": "@nx/eslint:lint",",
              ""outputs": ["{options.outputFile}"]",
              "},",
              ""test": {",
              ""executor": "@nx/jest:jest",",
              ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
              ""options": {",
              ""jestConfig": "libs/test/core/feature/jest.config.ts"",
              "}",
              "}",
              "},",
              ""tags": []",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/project.json",
          },
          "src": {
            "children": {
              "index.ts": {
                "content": [
                  "export * from './lib/test-core-feature.module';",
                ],
                "isBinary": false,
                "path": "libs/test/core/feature/src/index.ts",
              },
              "lib": {
                "children": {
                  "test-core-feature.module.ts": {
                    "content": [
                      "import { Module } from '@nestjs/common';",
                      "import { TestCompanyFeatureModule } from '@proj/test-company-feature';",
                      "@Module({",
                      "controllers: [],",
                      "providers: [],",
                      "exports: [],",
                      "})",
                      "export class TestCoreFeatureModule {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/core/feature/src/lib/test-core-feature.module.ts",
                  },
                },
                "path": "libs/test/core/feature/src/lib",
              },
            },
            "path": "libs/test/core/feature/src",
          },
          "tsconfig.json": {
            "content": [
              "{",
              ""extends": "../../../../tsconfig.base.json",",
              ""compilerOptions": {",
              ""module": "commonjs",",
              ""forceConsistentCasingInFileNames": true,",
              ""strict": true,",
              ""noImplicitOverride": true,",
              ""noPropertyAccessFromIndexSignature": true,",
              ""noImplicitReturns": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""files": [],",
              ""include": [],",
              ""references": [",
              "{",
              ""path": "./tsconfig.lib.json"",
              "},",
              "{",
              ""path": "./tsconfig.spec.json"",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/tsconfig.json",
          },
          "tsconfig.lib.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""declaration": true,",
              ""types": ["node"],",
              ""target": "es6",",
              ""strictNullChecks": true,",
              ""noImplicitAny": true,",
              ""strictBindCallApply": true,",
              ""forceConsistentCasingInFileNames": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""include": ["src/**/*.ts"],",
              ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/tsconfig.lib.json",
          },
          "tsconfig.spec.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""module": "commonjs",",
              ""types": ["jest", "node"]",
              "},",
              ""include": [",
              ""jest.config.ts",",
              ""src/**/*.test.ts",",
              ""src/**/*.spec.ts",",
              ""src/**/*.d.ts"",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/tsconfig.spec.json",
          },
        },
        "path": "libs/test/core/feature",
      },
    },
    "path": "libs/test/core",
  },
  "sdk": {
    "children": {
      ".eslintrc.json": {
        "content": [
          "{",
          ""extends": ["../../../.eslintrc.json"],",
          ""ignorePatterns": ["!**/*"],",
          ""overrides": [",
          "{",
          ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
          ""rules": {}",
          "},",
          "{",
          ""files": ["*.ts", "*.tsx"],",
          ""rules": {}",
          "},",
          "{",
          ""files": ["*.js", "*.jsx"],",
          ""rules": {}",
          "}",
          "]",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/.eslintrc.json",
      },
      "README.md": {
        "content": [
          "# sdk",
          "This library was generated with [Nx](https://nx.dev).",
          "## Running unit tests",
          "Run \`nx test sdk\` to execute the unit tests via [Jest](https://jestjs.io).",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/README.md",
      },
      "jest.config.ts": {
        "content": [
          "/* eslint-disable */",
          "export default {",
          "displayName: 'sdk',",
          "preset: '../../../jest.preset.js',",
          "testEnvironment: 'node',",
          "transform: {",
          "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
          "},",
          "moduleFileExtensions: ['ts', 'js', 'html'],",
          "coverageDirectory: '../../../coverage/libs/test/sdk',",
          "};",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/jest.config.ts",
      },
      "project.json": {
        "content": [
          "{",
          ""name": "sdk",",
          ""$schema": "../../../node_modules/nx/schemas/project-schema.json",",
          ""sourceRoot": "libs/test/sdk/src",",
          ""projectType": "library",",
          ""targets": {",
          ""lint": {",
          ""executor": "@nx/eslint:lint",",
          ""outputs": ["{options.outputFile}"]",
          "},",
          ""test": {",
          ""executor": "@nx/jest:jest",",
          ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
          ""options": {",
          ""jestConfig": "libs/test/sdk/jest.config.ts"",
          "}",
          "}",
          "},",
          ""tags": []",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/project.json",
      },
      "src": {
        "children": {
          "graphql": {
            "children": {
              "feature-company.graphql": {
                "content": [
                  "fragment CompanyDetails on Company {",
                  "createdAt",
                  "id",
                  "name",
                  "location",
                  "phone",
                  "updatedAt",
                  "}",
                  "query adminFindManyCompany($input: AdminFindManyCompanyInput!) {",
                  "paging: adminFindManyCompany(input: $input) {",
                  "data {",
                  "...CompanyDetails",
                  "}",
                  "meta {",
                  "...PagingMetaDetails",
                  "}",
                  "}",
                  "}",
                  "query adminFindOneCompany($companyId: String!) {",
                  "item: adminFindOneCompany(companyId: $companyId) {",
                  "...CompanyDetails",
                  "}",
                  "}",
                  "mutation adminCreateCompany($input: AdminCreateCompanyInput!) {",
                  "created: adminCreateCompany(input: $input) {",
                  "...CompanyDetails",
                  "}",
                  "}",
                  "mutation adminUpdateCompany(",
                  "$companyId: String!",
                  "$input: AdminUpdateCompanyInput!",
                  ") {",
                  "updated: adminUpdateCompany(companyId: $companyId, input: $input) {",
                  "...CompanyDetails",
                  "}",
                  "}",
                  "mutation adminDeleteCompany($companyId: String!) {",
                  "deleted: adminDeleteCompany(companyId: $companyId)",
                  "}",
                ],
                "isBinary": false,
                "path": "libs/test/sdk/src/graphql/feature-company.graphql",
              },
            },
            "path": "libs/test/sdk/src/graphql",
          },
          "index.ts": {
            "content": [
              "export * from './lib/sdk.module';",
            ],
            "isBinary": false,
            "path": "libs/test/sdk/src/index.ts",
          },
          "lib": {
            "children": {
              "sdk.module.ts": {
                "content": [
                  "import { Module } from '@nestjs/common';",
                  "@Module({",
                  "controllers: [],",
                  "providers: [],",
                  "exports: [],",
                  "})",
                  "export class SdkModule {}",
                ],
                "isBinary": false,
                "path": "libs/test/sdk/src/lib/sdk.module.ts",
              },
            },
            "path": "libs/test/sdk/src/lib",
          },
        },
        "path": "libs/test/sdk/src",
      },
      "tsconfig.json": {
        "content": [
          "{",
          ""extends": "../../../tsconfig.base.json",",
          ""compilerOptions": {",
          ""module": "commonjs",",
          ""forceConsistentCasingInFileNames": true,",
          ""strict": true,",
          ""noImplicitOverride": true,",
          ""noPropertyAccessFromIndexSignature": true,",
          ""noImplicitReturns": true,",
          ""noFallthroughCasesInSwitch": true",
          "},",
          ""files": [],",
          ""include": [],",
          ""references": [",
          "{",
          ""path": "./tsconfig.lib.json"",
          "},",
          "{",
          ""path": "./tsconfig.spec.json"",
          "}",
          "]",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/tsconfig.json",
      },
      "tsconfig.lib.json": {
        "content": [
          "{",
          ""extends": "./tsconfig.json",",
          ""compilerOptions": {",
          ""outDir": "../../../dist/out-tsc",",
          ""declaration": true,",
          ""types": ["node"],",
          ""target": "es6",",
          ""strictNullChecks": true,",
          ""noImplicitAny": true,",
          ""strictBindCallApply": true,",
          ""forceConsistentCasingInFileNames": true,",
          ""noFallthroughCasesInSwitch": true",
          "},",
          ""include": ["src/**/*.ts"],",
          ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/tsconfig.lib.json",
      },
      "tsconfig.spec.json": {
        "content": [
          "{",
          ""extends": "./tsconfig.json",",
          ""compilerOptions": {",
          ""outDir": "../../../dist/out-tsc",",
          ""module": "commonjs",",
          ""types": ["jest", "node"]",
          "},",
          ""include": [",
          ""jest.config.ts",",
          ""src/**/*.test.ts",",
          ""src/**/*.spec.ts",",
          ""src/**/*.d.ts"",
          "]",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/tsconfig.spec.json",
      },
    },
    "path": "libs/test/sdk",
  },
}
`;

exports[`api-crud generator should run successfully 1`] = `
{
  "company": {
    "children": {
      "data-access": {
        "children": {
          ".eslintrc.json": {
            "content": [
              "{",
              ""extends": ["../../../../.eslintrc.json"],",
              ""ignorePatterns": ["!**/*"],",
              ""overrides": [",
              "{",
              ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.ts", "*.tsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.js", "*.jsx"],",
              ""rules": {}",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/.eslintrc.json",
          },
          "README.md": {
            "content": [
              "# test-company-data-access",
              "This library was generated with [Nx](https://nx.dev).",
              "## Running unit tests",
              "Run \`nx test test-company-data-access\` to execute the unit tests via [Jest](https://jestjs.io).",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/README.md",
          },
          "jest.config.ts": {
            "content": [
              "/* eslint-disable */",
              "export default {",
              "displayName: 'test-company-data-access',",
              "preset: '../../../../jest.preset.js',",
              "testEnvironment: 'node',",
              "transform: {",
              "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
              "},",
              "moduleFileExtensions: ['ts', 'js', 'html'],",
              "coverageDirectory: '../../../../coverage/libs/test/company/data-access',",
              "};",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/jest.config.ts",
          },
          "project.json": {
            "content": [
              "{",
              ""name": "test-company-data-access",",
              ""$schema": "../../../../node_modules/nx/schemas/project-schema.json",",
              ""sourceRoot": "libs/test/company/data-access/src",",
              ""projectType": "library",",
              ""targets": {",
              ""lint": {",
              ""executor": "@nx/eslint:lint",",
              ""outputs": ["{options.outputFile}"]",
              "},",
              ""test": {",
              ""executor": "@nx/jest:jest",",
              ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
              ""options": {",
              ""jestConfig": "libs/test/company/data-access/jest.config.ts"",
              "}",
              "}",
              "},",
              ""tags": ["app:test", "type:data-access"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/project.json",
          },
          "src": {
            "children": {
              "index.ts": {
                "content": [
                  "export * from './lib/test-company.data-access.module';",
                  "export * from './lib/test-company.service';",
                  "export * from './lib/entity/company.entity';",
                  "export * from './lib/dto/admin-create-company.input';",
                  "export * from './lib/dto/admin-find-many-company.input';",
                  "export * from './lib/dto/admin-update-company.input';",
                ],
                "isBinary": false,
                "path": "libs/test/company/data-access/src/index.ts",
              },
              "lib": {
                "children": {
                  "dto": {
                    "children": {
                      "admin-create-company.input.ts": {
                        "content": [
                          "import { Field, InputType } from '@nestjs/graphql';",
                          "@InputType()",
                          "export class AdminCreateCompanyInput {",
                          "@Field()",
                          "name!: string;",
                          "@Field()",
                          "location!: string;",
                          "@Field({ nullable: true })",
                          "phone?: string;",
                          "}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/dto/admin-create-company.input.ts",
                      },
                      "admin-find-many-company.input.ts": {
                        "content": [
                          "import { Field, InputType } from '@nestjs/graphql';",
                          "import { PagingInput } from '@proj/test-core-data-access';",
                          "@InputType()",
                          "export class AdminFindManyCompanyInput extends PagingInput() {",
                          "@Field({ nullable: true })",
                          "search?: string;",
                          "}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/dto/admin-find-many-company.input.ts",
                      },
                      "admin-update-company.input.ts": {
                        "content": [
                          "import { Field, InputType } from '@nestjs/graphql';",
                          "@InputType()",
                          "export class AdminUpdateCompanyInput {",
                          "@Field({ nullable: true })",
                          "name?: string;",
                          "@Field({ nullable: true })",
                          "location?: string;",
                          "@Field({ nullable: true })",
                          "phone?: string;",
                          "}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/dto/admin-update-company.input.ts",
                      },
                    },
                    "path": "libs/test/company/data-access/src/lib/dto",
                  },
                  "entity": {
                    "children": {
                      "company.entity.ts": {
                        "content": [
                          "import { Field, ObjectType } from '@nestjs/graphql';",
                          "import { PagingResponse } from '@proj/test-core-data-access';",
                          "@ObjectType()",
                          "export class Company {",
                          "@Field()",
                          "id!: string;",
                          "@Field({ nullable: true })",
                          "createdAt?: Date;",
                          "@Field({ nullable: true })",
                          "updatedAt?: Date;",
                          "@Field()",
                          "name!: string;",
                          "@Field()",
                          "location!: string;",
                          "@Field({ nullable: true })",
                          "phone?: string;",
                          "}",
                          "@ObjectType()",
                          "export class CompanyPaging extends PagingResponse<Company>(Company) {}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/entity/company.entity.ts",
                      },
                    },
                    "path": "libs/test/company/data-access/src/lib/entity",
                  },
                  "helpers": {
                    "children": {
                      "get-company-where-admin.input.ts": {
                        "content": [
                          "import { Prisma } from '@prisma/client';",
                          "import { AdminFindManyCompanyInput } from '../dto/admin-find-many-company.input';",
                          "export function getCompanyWhereAdminInput(",
                          "input: AdminFindManyCompanyInput",
                          "): Prisma.CompanyWhereInput {",
                          "const where: Prisma.CompanyWhereInput = {};",
                          "if (input.search) {",
                          "where.OR = [",
                          "{ id: { contains: input.search, mode: 'insensitive' } },",
                          "{ name: { contains: input.search, mode: 'insensitive' } },",
                          "];",
                          "}",
                          "return where;",
                          "}",
                        ],
                        "isBinary": false,
                        "path": "libs/test/company/data-access/src/lib/helpers/get-company-where-admin.input.ts",
                      },
                    },
                    "path": "libs/test/company/data-access/src/lib/helpers",
                  },
                  "test-company-data-admin.service.ts": {
                    "content": [
                      "import { Injectable } from '@nestjs/common';",
                      "import { AdminCreateCompanyInput } from './dto/admin-create-company.input';",
                      "import { AdminFindManyCompanyInput } from './dto/admin-find-many-company.input';",
                      "import { AdminUpdateCompanyInput } from './dto/admin-update-company.input';",
                      "import { CompanyPaging } from './entity/company.entity';",
                      "import { getCompanyWhereAdminInput } from './helpers/get-company-where-admin.input';",
                      "import { TestCompanyDataService } from './test-company-data.service';",
                      "@Injectable()",
                      "export class TestCompanyDataAdminService {",
                      "constructor(private readonly data: TestCompanyDataService) {}",
                      "async createCompany(input: AdminCreateCompanyInput) {",
                      "return this.data.create(input);",
                      "}",
                      "async deleteCompany(companyId: string) {",
                      "return this.data.delete(companyId);",
                      "}",
                      "async findManyCompany(",
                      "input: AdminFindManyCompanyInput",
                      "): Promise<CompanyPaging> {",
                      "return this.data.findMany({",
                      "orderBy: { createdAt: 'desc' },",
                      "where: getCompanyWhereAdminInput(input),",
                      "limit: input.limit,",
                      "page: input.page,",
                      "});",
                      "}",
                      "async findOneCompany(companyId: string) {",
                      "return this.data.findOne(companyId);",
                      "}",
                      "async updateCompany(companyId: string, input: AdminUpdateCompanyInput) {",
                      "return this.data.update(companyId, input);",
                      "}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/data-access/src/lib/test-company-data-admin.service.ts",
                  },
                  "test-company-data.service.ts": {
                    "content": [
                      "import { Injectable } from '@nestjs/common';",
                      "import { Prisma } from '@prisma/client';",
                      "import {",
                      "TestCoreService,",
                      "type PagingInputFields,",
                      "} from '@proj/test-core-data-access';",
                      "import { CompanyPaging } from './entity/company.entity';",
                      "@Injectable()",
                      "export class TestCompanyDataService {",
                      "constructor(private readonly core: TestCoreService) {}",
                      "async create(input: Prisma.CompanyUncheckedCreateInput) {",
                      "return this.core.data.company.create({ data: input });",
                      "}",
                      "async delete(companyId: string) {",
                      "const deleted = await this.core.data.company.delete({",
                      "where: { id: companyId },",
                      "});",
                      "return !!deleted;",
                      "}",
                      "async findMany({",
                      "limit = 10,",
                      "page = 1,",
                      "...input",
                      "}: Prisma.CompanyFindManyArgs & PagingInputFields): Promise<CompanyPaging> {",
                      "return this.core.data.company",
                      ".paginate(input)",
                      ".withPages({ limit, page })",
                      ".then(([data, meta]) => ({ data, meta }));",
                      "}",
                      "async findOne(companyId: string) {",
                      "return this.core.data.company.findUnique({ where: { id: companyId } });",
                      "}",
                      "async update(companyId: string, input: Prisma.CompanyUpdateInput) {",
                      "return this.core.data.company.update({",
                      "where: { id: companyId },",
                      "data: input,",
                      "});",
                      "}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/data-access/src/lib/test-company-data.service.ts",
                  },
                  "test-company.data-access.module.ts": {
                    "content": [
                      "import { Module } from '@nestjs/common';",
                      "import { TestCoreDataAccessModule } from '@proj/test-core-data-access';",
                      "import { TestCompanyService } from './test-company.service';",
                      "import { TestCompanyDataService } from './test-company-data.service';",
                      "import { TestCompanyDataAdminService } from './test-company-data-admin.service';",
                      "@Module({",
                      "imports: [TestCoreDataAccessModule],",
                      "providers: [",
                      "TestCompanyService,",
                      "TestCompanyDataService,",
                      "TestCompanyDataAdminService,",
                      "],",
                      "exports: [TestCompanyService],",
                      "})",
                      "export class TestCompanyDataAccessModule {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/data-access/src/lib/test-company.data-access.module.ts",
                  },
                  "test-company.service.ts": {
                    "content": [
                      "import { Injectable } from '@nestjs/common';",
                      "import { TestCompanyDataService } from './test-company-data.service';",
                      "import { TestCompanyDataAdminService } from './test-company-data-admin.service';",
                      "@Injectable()",
                      "export class TestCompanyService {",
                      "constructor(",
                      "readonly data: TestCompanyDataService,",
                      "readonly admin: TestCompanyDataAdminService",
                      ") {}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/data-access/src/lib/test-company.service.ts",
                  },
                },
                "path": "libs/test/company/data-access/src/lib",
              },
            },
            "path": "libs/test/company/data-access/src",
          },
          "tsconfig.json": {
            "content": [
              "{",
              ""extends": "../../../../tsconfig.base.json",",
              ""compilerOptions": {",
              ""module": "commonjs",",
              ""forceConsistentCasingInFileNames": true,",
              ""strict": true,",
              ""noImplicitOverride": true,",
              ""noPropertyAccessFromIndexSignature": true,",
              ""noImplicitReturns": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""files": [],",
              ""include": [],",
              ""references": [",
              "{",
              ""path": "./tsconfig.lib.json"",
              "},",
              "{",
              ""path": "./tsconfig.spec.json"",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/tsconfig.json",
          },
          "tsconfig.lib.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""declaration": true,",
              ""types": ["node"],",
              ""target": "es6",",
              ""strictNullChecks": true,",
              ""noImplicitAny": true,",
              ""strictBindCallApply": true,",
              ""forceConsistentCasingInFileNames": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""include": ["src/**/*.ts"],",
              ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/tsconfig.lib.json",
          },
          "tsconfig.spec.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""module": "commonjs",",
              ""types": ["jest", "node"]",
              "},",
              ""include": [",
              ""jest.config.ts",",
              ""src/**/*.test.ts",",
              ""src/**/*.spec.ts",",
              ""src/**/*.d.ts"",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/data-access/tsconfig.spec.json",
          },
        },
        "path": "libs/test/company/data-access",
      },
      "feature": {
        "children": {
          ".eslintrc.json": {
            "content": [
              "{",
              ""extends": ["../../../../.eslintrc.json"],",
              ""ignorePatterns": ["!**/*"],",
              ""overrides": [",
              "{",
              ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.ts", "*.tsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.js", "*.jsx"],",
              ""rules": {}",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/.eslintrc.json",
          },
          "README.md": {
            "content": [
              "# test-company-feature",
              "This library was generated with [Nx](https://nx.dev).",
              "## Running unit tests",
              "Run \`nx test test-company-feature\` to execute the unit tests via [Jest](https://jestjs.io).",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/README.md",
          },
          "jest.config.ts": {
            "content": [
              "/* eslint-disable */",
              "export default {",
              "displayName: 'test-company-feature',",
              "preset: '../../../../jest.preset.js',",
              "testEnvironment: 'node',",
              "transform: {",
              "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
              "},",
              "moduleFileExtensions: ['ts', 'js', 'html'],",
              "coverageDirectory: '../../../../coverage/libs/test/company/feature',",
              "};",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/jest.config.ts",
          },
          "project.json": {
            "content": [
              "{",
              ""name": "test-company-feature",",
              ""$schema": "../../../../node_modules/nx/schemas/project-schema.json",",
              ""sourceRoot": "libs/test/company/feature/src",",
              ""projectType": "library",",
              ""targets": {",
              ""lint": {",
              ""executor": "@nx/eslint:lint",",
              ""outputs": ["{options.outputFile}"]",
              "},",
              ""test": {",
              ""executor": "@nx/jest:jest",",
              ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
              ""options": {",
              ""jestConfig": "libs/test/company/feature/jest.config.ts"",
              "}",
              "}",
              "},",
              ""tags": ["app:test", "type:feature"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/project.json",
          },
          "src": {
            "children": {
              "index.ts": {
                "content": [
                  "export * from './lib/test-company.feature.module';",
                ],
                "isBinary": false,
                "path": "libs/test/company/feature/src/index.ts",
              },
              "lib": {
                "children": {
                  "test-company-admin.resolver.ts": {
                    "content": [
                      "import { Resolver } from '@nestjs/graphql';",
                      "import { TestCompanyService } from '@proj/test-company-data-access';",
                      "import { TestAuthGraphQLAdminGuard } from '@proj/test-auth-data-access';",
                      "import { Mutation, Query, Args } from '@nestjs/graphql';",
                      "import { UseGuards } from '@nestjs/common';",
                      "import {",
                      "AdminCreateCompanyInput,",
                      "AdminFindManyCompanyInput,",
                      "Company,",
                      "CompanyPaging,",
                      "AdminUpdateCompanyInput,",
                      "} from '@proj/test-company-data-access';",
                      "@Resolver()",
                      "@UseGuards(TestAuthGraphQLAdminGuard)",
                      "export class TestCompanyAdminResolver {",
                      "constructor(private readonly service: TestCompanyService) {}",
                      "@Mutation(() => Company, { nullable: true })",
                      "adminCreateCompany(@Args('input') input: AdminCreateCompanyInput) {",
                      "return this.service.admin.createCompany(input);",
                      "}",
                      "@Mutation(() => Boolean, { nullable: true })",
                      "adminDeleteCompany(@Args('companyId') companyId: string) {",
                      "return this.service.admin.deleteCompany(companyId);",
                      "}",
                      "@Query(() => CompanyPaging)",
                      "adminFindManyCompany(@Args('input') input: AdminFindManyCompanyInput) {",
                      "return this.service.admin.findManyCompany(input);",
                      "}",
                      "@Query(() => Company, { nullable: true })",
                      "adminFindOneCompany(@Args('companyId') companyId: string) {",
                      "return this.service.admin.findOneCompany(companyId);",
                      "}",
                      "@Mutation(() => Company, { nullable: true })",
                      "adminUpdateCompany(",
                      "@Args('companyId') companyId: string,",
                      "@Args('input') input: AdminUpdateCompanyInput",
                      ") {",
                      "return this.service.admin.updateCompany(companyId, input);",
                      "}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/feature/src/lib/test-company-admin.resolver.ts",
                  },
                  "test-company.feature.module.ts": {
                    "content": [
                      "import { Module } from '@nestjs/common';",
                      "import { TestCompanyDataAccessModule } from '@proj/test-company-data-access';",
                      "import { TestCompanyResolver } from './test-company.resolver';",
                      "import { TestCompanyAdminResolver } from './test-company-admin.resolver';",
                      "@Module({",
                      "imports: [TestCompanyDataAccessModule],",
                      "providers: [TestCompanyResolver, TestCompanyAdminResolver],",
                      "})",
                      "export class TestCompanyFeatureModule {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/feature/src/lib/test-company.feature.module.ts",
                  },
                  "test-company.resolver.ts": {
                    "content": [
                      "import { Resolver } from '@nestjs/graphql';",
                      "import { TestCompanyService } from '@proj/test-company-data-access';",
                      "import { Company } from '@proj/test-company-data-access';",
                      "@Resolver(() => Company)",
                      "export class TestCompanyResolver {",
                      "constructor(private readonly service: TestCompanyService) {}",
                      "}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/company/feature/src/lib/test-company.resolver.ts",
                  },
                },
                "path": "libs/test/company/feature/src/lib",
              },
            },
            "path": "libs/test/company/feature/src",
          },
          "tsconfig.json": {
            "content": [
              "{",
              ""extends": "../../../../tsconfig.base.json",",
              ""compilerOptions": {",
              ""module": "commonjs",",
              ""forceConsistentCasingInFileNames": true,",
              ""strict": true,",
              ""noImplicitOverride": true,",
              ""noPropertyAccessFromIndexSignature": true,",
              ""noImplicitReturns": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""files": [],",
              ""include": [],",
              ""references": [",
              "{",
              ""path": "./tsconfig.lib.json"",
              "},",
              "{",
              ""path": "./tsconfig.spec.json"",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/tsconfig.json",
          },
          "tsconfig.lib.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""declaration": true,",
              ""types": ["node"],",
              ""target": "es6",",
              ""strictNullChecks": true,",
              ""noImplicitAny": true,",
              ""strictBindCallApply": true,",
              ""forceConsistentCasingInFileNames": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""include": ["src/**/*.ts"],",
              ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/tsconfig.lib.json",
          },
          "tsconfig.spec.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""module": "commonjs",",
              ""types": ["jest", "node"]",
              "},",
              ""include": [",
              ""jest.config.ts",",
              ""src/**/*.test.ts",",
              ""src/**/*.spec.ts",",
              ""src/**/*.d.ts"",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/company/feature/tsconfig.spec.json",
          },
        },
        "path": "libs/test/company/feature",
      },
    },
    "path": "libs/test/company",
  },
  "core": {
    "children": {
      "data-access": {
        "children": {
          ".eslintrc.json": {
            "content": [
              "{",
              ""extends": ["../../../../.eslintrc.json"],",
              ""ignorePatterns": ["!**/*"],",
              ""overrides": [",
              "{",
              ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.ts", "*.tsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.js", "*.jsx"],",
              ""rules": {}",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/.eslintrc.json",
          },
          "README.md": {
            "content": [
              "# test-core-data-access",
              "This library was generated with [Nx](https://nx.dev).",
              "## Running unit tests",
              "Run \`nx test test-core-data-access\` to execute the unit tests via [Jest](https://jestjs.io).",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/README.md",
          },
          "jest.config.ts": {
            "content": [
              "/* eslint-disable */",
              "export default {",
              "displayName: 'test-core-data-access',",
              "preset: '../../../../jest.preset.js',",
              "testEnvironment: 'node',",
              "transform: {",
              "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
              "},",
              "moduleFileExtensions: ['ts', 'js', 'html'],",
              "coverageDirectory: '../../../../coverage/libs/test/core/data-access',",
              "};",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/jest.config.ts",
          },
          "project.json": {
            "content": [
              "{",
              ""name": "test-core-data-access",",
              ""$schema": "../../../../node_modules/nx/schemas/project-schema.json",",
              ""sourceRoot": "libs/test/core/data-access/src",",
              ""projectType": "library",",
              ""targets": {",
              ""lint": {",
              ""executor": "@nx/eslint:lint",",
              ""outputs": ["{options.outputFile}"]",
              "},",
              ""test": {",
              ""executor": "@nx/jest:jest",",
              ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
              ""options": {",
              ""jestConfig": "libs/test/core/data-access/jest.config.ts"",
              "}",
              "}",
              "},",
              ""tags": []",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/project.json",
          },
          "src": {
            "children": {
              "index.ts": {
                "content": [
                  "export * from './lib/test-core-data-access.module';",
                ],
                "isBinary": false,
                "path": "libs/test/core/data-access/src/index.ts",
              },
              "lib": {
                "children": {
                  "test-core-data-access.module.ts": {
                    "content": [
                      "import { Module } from '@nestjs/common';",
                      "import { TestCoreService } from './test-core.service';",
                      "@Module({",
                      "controllers: [],",
                      "providers: [TestCoreService],",
                      "exports: [],",
                      "})",
                      "export class TestCoreDataAccessModule {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/core/data-access/src/lib/test-core-data-access.module.ts",
                  },
                  "test-core.service.spec.ts": {
                    "content": [
                      "import { Test, TestingModule } from '@nestjs/testing';",
                      "import { TestCoreService } from './test-core.service';",
                      "describe('TestCoreService', () => {",
                      "let service: TestCoreService;",
                      "beforeEach(async () => {",
                      "const module: TestingModule = await Test.createTestingModule({",
                      "providers: [TestCoreService],",
                      "}).compile();",
                      "service = module.get<TestCoreService>(TestCoreService);",
                      "});",
                      "it('should be defined', () => {",
                      "expect(service).toBeDefined();",
                      "});",
                      "});",
                    ],
                    "isBinary": false,
                    "path": "libs/test/core/data-access/src/lib/test-core.service.spec.ts",
                  },
                  "test-core.service.ts": {
                    "content": [
                      "import { Injectable } from '@nestjs/common';",
                      "@Injectable()",
                      "export class TestCoreService {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/core/data-access/src/lib/test-core.service.ts",
                  },
                },
                "path": "libs/test/core/data-access/src/lib",
              },
            },
            "path": "libs/test/core/data-access/src",
          },
          "tsconfig.json": {
            "content": [
              "{",
              ""extends": "../../../../tsconfig.base.json",",
              ""compilerOptions": {",
              ""module": "commonjs",",
              ""forceConsistentCasingInFileNames": true,",
              ""strict": true,",
              ""noImplicitOverride": true,",
              ""noPropertyAccessFromIndexSignature": true,",
              ""noImplicitReturns": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""files": [],",
              ""include": [],",
              ""references": [",
              "{",
              ""path": "./tsconfig.lib.json"",
              "},",
              "{",
              ""path": "./tsconfig.spec.json"",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/tsconfig.json",
          },
          "tsconfig.lib.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""declaration": true,",
              ""types": ["node"],",
              ""target": "es6",",
              ""strictNullChecks": true,",
              ""noImplicitAny": true,",
              ""strictBindCallApply": true,",
              ""forceConsistentCasingInFileNames": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""include": ["src/**/*.ts"],",
              ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/tsconfig.lib.json",
          },
          "tsconfig.spec.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""module": "commonjs",",
              ""types": ["jest", "node"]",
              "},",
              ""include": [",
              ""jest.config.ts",",
              ""src/**/*.test.ts",",
              ""src/**/*.spec.ts",",
              ""src/**/*.d.ts"",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/data-access/tsconfig.spec.json",
          },
        },
        "path": "libs/test/core/data-access",
      },
      "feature": {
        "children": {
          ".eslintrc.json": {
            "content": [
              "{",
              ""extends": ["../../../../.eslintrc.json"],",
              ""ignorePatterns": ["!**/*"],",
              ""overrides": [",
              "{",
              ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.ts", "*.tsx"],",
              ""rules": {}",
              "},",
              "{",
              ""files": ["*.js", "*.jsx"],",
              ""rules": {}",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/.eslintrc.json",
          },
          "README.md": {
            "content": [
              "# test-core-feature",
              "This library was generated with [Nx](https://nx.dev).",
              "## Running unit tests",
              "Run \`nx test test-core-feature\` to execute the unit tests via [Jest](https://jestjs.io).",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/README.md",
          },
          "jest.config.ts": {
            "content": [
              "/* eslint-disable */",
              "export default {",
              "displayName: 'test-core-feature',",
              "preset: '../../../../jest.preset.js',",
              "testEnvironment: 'node',",
              "transform: {",
              "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
              "},",
              "moduleFileExtensions: ['ts', 'js', 'html'],",
              "coverageDirectory: '../../../../coverage/libs/test/core/feature',",
              "};",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/jest.config.ts",
          },
          "project.json": {
            "content": [
              "{",
              ""name": "test-core-feature",",
              ""$schema": "../../../../node_modules/nx/schemas/project-schema.json",",
              ""sourceRoot": "libs/test/core/feature/src",",
              ""projectType": "library",",
              ""targets": {",
              ""lint": {",
              ""executor": "@nx/eslint:lint",",
              ""outputs": ["{options.outputFile}"]",
              "},",
              ""test": {",
              ""executor": "@nx/jest:jest",",
              ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
              ""options": {",
              ""jestConfig": "libs/test/core/feature/jest.config.ts"",
              "}",
              "}",
              "},",
              ""tags": []",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/project.json",
          },
          "src": {
            "children": {
              "index.ts": {
                "content": [
                  "export * from './lib/test-core-feature.module';",
                ],
                "isBinary": false,
                "path": "libs/test/core/feature/src/index.ts",
              },
              "lib": {
                "children": {
                  "test-core-feature.module.ts": {
                    "content": [
                      "import { Module } from '@nestjs/common';",
                      "import { TestCompanyFeatureModule } from '@proj/test-company-feature';",
                      "@Module({",
                      "controllers: [],",
                      "providers: [],",
                      "exports: [],",
                      "})",
                      "export class TestCoreFeatureModule {}",
                    ],
                    "isBinary": false,
                    "path": "libs/test/core/feature/src/lib/test-core-feature.module.ts",
                  },
                },
                "path": "libs/test/core/feature/src/lib",
              },
            },
            "path": "libs/test/core/feature/src",
          },
          "tsconfig.json": {
            "content": [
              "{",
              ""extends": "../../../../tsconfig.base.json",",
              ""compilerOptions": {",
              ""module": "commonjs",",
              ""forceConsistentCasingInFileNames": true,",
              ""strict": true,",
              ""noImplicitOverride": true,",
              ""noPropertyAccessFromIndexSignature": true,",
              ""noImplicitReturns": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""files": [],",
              ""include": [],",
              ""references": [",
              "{",
              ""path": "./tsconfig.lib.json"",
              "},",
              "{",
              ""path": "./tsconfig.spec.json"",
              "}",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/tsconfig.json",
          },
          "tsconfig.lib.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""declaration": true,",
              ""types": ["node"],",
              ""target": "es6",",
              ""strictNullChecks": true,",
              ""noImplicitAny": true,",
              ""strictBindCallApply": true,",
              ""forceConsistentCasingInFileNames": true,",
              ""noFallthroughCasesInSwitch": true",
              "},",
              ""include": ["src/**/*.ts"],",
              ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/tsconfig.lib.json",
          },
          "tsconfig.spec.json": {
            "content": [
              "{",
              ""extends": "./tsconfig.json",",
              ""compilerOptions": {",
              ""outDir": "../../../../dist/out-tsc",",
              ""module": "commonjs",",
              ""types": ["jest", "node"]",
              "},",
              ""include": [",
              ""jest.config.ts",",
              ""src/**/*.test.ts",",
              ""src/**/*.spec.ts",",
              ""src/**/*.d.ts"",
              "]",
              "}",
            ],
            "isBinary": false,
            "path": "libs/test/core/feature/tsconfig.spec.json",
          },
        },
        "path": "libs/test/core/feature",
      },
    },
    "path": "libs/test/core",
  },
  "sdk": {
    "children": {
      ".eslintrc.json": {
        "content": [
          "{",
          ""extends": ["../../../.eslintrc.json"],",
          ""ignorePatterns": ["!**/*"],",
          ""overrides": [",
          "{",
          ""files": ["*.ts", "*.tsx", "*.js", "*.jsx"],",
          ""rules": {}",
          "},",
          "{",
          ""files": ["*.ts", "*.tsx"],",
          ""rules": {}",
          "},",
          "{",
          ""files": ["*.js", "*.jsx"],",
          ""rules": {}",
          "}",
          "]",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/.eslintrc.json",
      },
      "README.md": {
        "content": [
          "# sdk",
          "This library was generated with [Nx](https://nx.dev).",
          "## Running unit tests",
          "Run \`nx test sdk\` to execute the unit tests via [Jest](https://jestjs.io).",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/README.md",
      },
      "jest.config.ts": {
        "content": [
          "/* eslint-disable */",
          "export default {",
          "displayName: 'sdk',",
          "preset: '../../../jest.preset.js',",
          "testEnvironment: 'node',",
          "transform: {",
          "'^.+\\\\.[tj]s$': ['ts-jest', { tsconfig: '<rootDir>/tsconfig.spec.json' }],",
          "},",
          "moduleFileExtensions: ['ts', 'js', 'html'],",
          "coverageDirectory: '../../../coverage/libs/test/sdk',",
          "};",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/jest.config.ts",
      },
      "project.json": {
        "content": [
          "{",
          ""name": "sdk",",
          ""$schema": "../../../node_modules/nx/schemas/project-schema.json",",
          ""sourceRoot": "libs/test/sdk/src",",
          ""projectType": "library",",
          ""targets": {",
          ""lint": {",
          ""executor": "@nx/eslint:lint",",
          ""outputs": ["{options.outputFile}"]",
          "},",
          ""test": {",
          ""executor": "@nx/jest:jest",",
          ""outputs": ["{workspaceRoot}/coverage/{projectRoot}"],",
          ""options": {",
          ""jestConfig": "libs/test/sdk/jest.config.ts"",
          "}",
          "}",
          "},",
          ""tags": []",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/project.json",
      },
      "src": {
        "children": {
          "graphql": {
            "children": {
              "feature-company.graphql": {
                "content": [
                  "fragment CompanyDetails on Company {",
                  "createdAt",
                  "id",
                  "name",
                  "location",
                  "phone",
                  "updatedAt",
                  "}",
                  "query adminFindManyCompany($input: AdminFindManyCompanyInput!) {",
                  "paging: adminFindManyCompany(input: $input) {",
                  "data {",
                  "...CompanyDetails",
                  "}",
                  "meta {",
                  "...PagingMetaDetails",
                  "}",
                  "}",
                  "}",
                  "query adminFindOneCompany($companyId: String!) {",
                  "item: adminFindOneCompany(companyId: $companyId) {",
                  "...CompanyDetails",
                  "}",
                  "}",
                  "mutation adminCreateCompany($input: AdminCreateCompanyInput!) {",
                  "created: adminCreateCompany(input: $input) {",
                  "...CompanyDetails",
                  "}",
                  "}",
                  "mutation adminUpdateCompany(",
                  "$companyId: String!",
                  "$input: AdminUpdateCompanyInput!",
                  ") {",
                  "updated: adminUpdateCompany(companyId: $companyId, input: $input) {",
                  "...CompanyDetails",
                  "}",
                  "}",
                  "mutation adminDeleteCompany($companyId: String!) {",
                  "deleted: adminDeleteCompany(companyId: $companyId)",
                  "}",
                ],
                "isBinary": false,
                "path": "libs/test/sdk/src/graphql/feature-company.graphql",
              },
            },
            "path": "libs/test/sdk/src/graphql",
          },
          "index.ts": {
            "content": [
              "export * from './lib/sdk.module';",
            ],
            "isBinary": false,
            "path": "libs/test/sdk/src/index.ts",
          },
          "lib": {
            "children": {
              "sdk.module.ts": {
                "content": [
                  "import { Module } from '@nestjs/common';",
                  "@Module({",
                  "controllers: [],",
                  "providers: [],",
                  "exports: [],",
                  "})",
                  "export class SdkModule {}",
                ],
                "isBinary": false,
                "path": "libs/test/sdk/src/lib/sdk.module.ts",
              },
            },
            "path": "libs/test/sdk/src/lib",
          },
        },
        "path": "libs/test/sdk/src",
      },
      "tsconfig.json": {
        "content": [
          "{",
          ""extends": "../../../tsconfig.base.json",",
          ""compilerOptions": {",
          ""module": "commonjs",",
          ""forceConsistentCasingInFileNames": true,",
          ""strict": true,",
          ""noImplicitOverride": true,",
          ""noPropertyAccessFromIndexSignature": true,",
          ""noImplicitReturns": true,",
          ""noFallthroughCasesInSwitch": true",
          "},",
          ""files": [],",
          ""include": [],",
          ""references": [",
          "{",
          ""path": "./tsconfig.lib.json"",
          "},",
          "{",
          ""path": "./tsconfig.spec.json"",
          "}",
          "]",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/tsconfig.json",
      },
      "tsconfig.lib.json": {
        "content": [
          "{",
          ""extends": "./tsconfig.json",",
          ""compilerOptions": {",
          ""outDir": "../../../dist/out-tsc",",
          ""declaration": true,",
          ""types": ["node"],",
          ""target": "es6",",
          ""strictNullChecks": true,",
          ""noImplicitAny": true,",
          ""strictBindCallApply": true,",
          ""forceConsistentCasingInFileNames": true,",
          ""noFallthroughCasesInSwitch": true",
          "},",
          ""include": ["src/**/*.ts"],",
          ""exclude": ["jest.config.ts", "src/**/*.spec.ts", "src/**/*.test.ts"]",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/tsconfig.lib.json",
      },
      "tsconfig.spec.json": {
        "content": [
          "{",
          ""extends": "./tsconfig.json",",
          ""compilerOptions": {",
          ""outDir": "../../../dist/out-tsc",",
          ""module": "commonjs",",
          ""types": ["jest", "node"]",
          "},",
          ""include": [",
          ""jest.config.ts",",
          ""src/**/*.test.ts",",
          ""src/**/*.spec.ts",",
          ""src/**/*.d.ts"",
          "]",
          "}",
        ],
        "isBinary": false,
        "path": "libs/test/sdk/tsconfig.spec.json",
      },
    },
    "path": "libs/test/sdk",
  },
}
`;
